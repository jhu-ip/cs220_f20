(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(2),i=n(6),r=(n(0),n(183)),o={id:"ex6-1",title:"Exercise 6-1"},c={unversionedId:"exercises/ex6-1",id:"exercises/ex6-1",isDocsHomePage:!1,title:"Exercise 6-1",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, but you need not hand it in. You are encouraged to work at home to complete what you do not get through today.",source:"@site/docs\\exercises\\ex6-1.md",slug:"/exercises/ex6-1",permalink:"/cs220_f20/docs/exercises/ex6-1",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/exercises/ex6-1.md",version:"current"},l=[{value:"Part 1",id:"part-1",children:[]},{value:"Part 2",id:"part-2",children:[]},{value:"Part 3",id:"part-3",children:[]},{value:"Part 4",id:"part-4",children:[]},{value:"Part 5",id:"part-5",children:[]},{value:"Part 6",id:"part-6",children:[]}],b={rightToc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability in the time given. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, but you need not hand it in. You are encouraged to work at home to complete what you do not get through today."))),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Get started by running ",Object(r.b)("inlineCode",{parentName:"p"},"git pull")," to update your clone of the public repository, and then copying the ",Object(r.b)("inlineCode",{parentName:"p"},"exercises/ex6-1")," directory into your personal git repository."))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Learning Objectives")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Reinforces concepts learned in today meeting:"),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"Linked lists"),Object(r.b)("li",{parentName:"ul"},"Dynamic memory allocation"),Object(r.b)("li",{parentName:"ul"},"Pointers, pointers, and more pointers"),Object(r.b)("li",{parentName:"ul"},"Implement the functionality necessary to support deletion from a (singly) linked list, and insertion into a sorted version of a linked list")))),Object(r.b)("h3",{id:"part-1"},"Part 1"),Object(r.b)("p",null,"Pull the starter code for this exercise from the public repo by taking the following steps:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Log into ugrad, then navigate into ",Object(r.b)("inlineCode",{parentName:"p"},"cs220-f20-public"),", type ",Object(r.b)("inlineCode",{parentName:"p"},"git status")," and confirm you have not modified any files or accidentally committed to the public repo. Ask for help if you have added or committed files there and need to undo.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Type ",Object(r.b)("inlineCode",{parentName:"p"},"git pull")," to synchronize your local repo and working copy with the remote repo.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Confirm that you can see the template files for today\u2019s exercise by typing ",Object(r.b)("inlineCode",{parentName:"p"},"ls exercises/ex6-1")," -- you should see files named ",Object(r.b)("inlineCode",{parentName:"p"},"Makefile"),", ",Object(r.b)("inlineCode",{parentName:"p"},"list.[h/c]"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"list_test.c")," inside.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Copy ",Object(r.b)("inlineCode",{parentName:"p"},"Makefile"),", ",Object(r.b)("inlineCode",{parentName:"p"},"list.[h/c]"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"list_test.c")," from the public class repository (in the ",Object(r.b)("inlineCode",{parentName:"p"},"/exercises/ex6-1/")," directory) to your personal repo in a new directory named ",Object(r.b)("inlineCode",{parentName:"p"},"ex6-1")," under ",Object(r.b)("inlineCode",{parentName:"p"},"~/cs220/exercises/")))),Object(r.b)("h3",{id:"part-2"},"Part 2"),Object(r.b)("p",null,"In file ",Object(r.b)("inlineCode",{parentName:"p"},"list.c"),", implement the ",Object(r.b)("inlineCode",{parentName:"p"},"delete_after")," and ",Object(r.b)("inlineCode",{parentName:"p"},"delete_front")," functions. The first removes ",Object(r.b)("em",{parentName:"p"},"and frees")," the node immediately after the argument. The second removes ",Object(r.b)("em",{parentName:"p"},"and frees")," the head of the list and updates the head pointer. Each one should return the character in the node being removed."),Object(r.b)("p",null,"For example, if your list includes the values ",Object(r.b)("em",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"em"},"a b c d e")),", then ",Object(r.b)("inlineCode",{parentName:"p"},"delete_after")," called on a pointer to the node containing ",Object(r.b)("em",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"em"},"c"))," would result in a list containing ",Object(r.b)("em",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"em"},"a b c e")),", and would return ",Object(r.b)("em",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"em"},"d")),".  And a call to ",Object(r.b)("inlineCode",{parentName:"p"},"delete_front")," on that revised list would result in a list containing ",Object(r.b)("em",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"em"},"b c e")),", and would return ",Object(r.b)("em",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"em"},"a")),"."),Object(r.b)("p",null,"You can validate your implementation by ",Object(r.b)("em",{parentName:"p"},"uncommenting")," the supplied tests for ",Object(r.b)("inlineCode",{parentName:"p"},"delete_after")," and ",Object(r.b)("inlineCode",{parentName:"p"},"delete_front")," in ",Object(r.b)("inlineCode",{parentName:"p"},"list_test.c")," and then typing ",Object(r.b)("inlineCode",{parentName:"p"},"make")," and then running the executable ",Object(r.b)("inlineCode",{parentName:"p"},"./test"),". Note that many tests exist in ",Object(r.b)("inlineCode",{parentName:"p"},"list_test.c"),"."),Object(r.b)("h3",{id:"part-3"},"Part 3"),Object(r.b)("p",null,"Validate that your implementation does not leak memory and does not access memory that does not belong to it by running:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"valgrind --leak-check=full ./test\n")),Object(r.b)("p",null,"Note that the ",Object(r.b)("inlineCode",{parentName:"p"},"Makefile")," compiles the object files with the ",Object(r.b)("inlineCode",{parentName:"p"},"-g")," flag."),Object(r.b)("h3",{id:"part-4"},"Part 4"),Object(r.b)("p",null,"In file ",Object(r.b)("inlineCode",{parentName:"p"},"list.c"),", implement the ",Object(r.b)("inlineCode",{parentName:"p"},"remove_all")," function. This removes all nodes in the list whose value matches the argument."),Object(r.b)("p",null,"You can validate your implementation of this function by uncommenting the supplied tests for ",Object(r.b)("inlineCode",{parentName:"p"},"remove_all")," in ",Object(r.b)("inlineCode",{parentName:"p"},"list_test.c")," and then typing ",Object(r.b)("inlineCode",{parentName:"p"},"make")," and then running the executable ",Object(r.b)("inlineCode",{parentName:"p"},"./test"),"."),Object(r.b)("h3",{id:"part-5"},"Part 5"),Object(r.b)("p",null,"Once again, validate that your implementation still does not leak memory and does not access memory that does not belong to it by running:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"valgrind --leak-check=full ./test\n")),Object(r.b)("h3",{id:"part-6"},"Part 6"),Object(r.b)("p",null,"In file ",Object(r.b)("inlineCode",{parentName:"p"},"list.c"),", implement the insert function. This function takes a pointer to the head of the list (which may point to NULL), creates a node with the prescribed value, and inserts it into the list ",Object(r.b)("em",{parentName:"p"},"in sorted order"),". This function will set the new head pointer if the head of the linked list has been updated."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"You can assume that when the function is called, the linked list comes in sorted.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"For sorting, use the ",Object(r.b)("inlineCode",{parentName:"p"},"<")," and ",Object(r.b)("inlineCode",{parentName:"p"},">")," operators. (e.g. the character \u2018a\u2019 should be larger than the character ",Object(r.b)("inlineCode",{parentName:"p"},"'B'"),".)")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Feel free to make use of the ",Object(r.b)("inlineCode",{parentName:"p"},"add_front")," and ",Object(r.b)("inlineCode",{parentName:"p"},"add_after")," methods we have already written."))),Object(r.b)("p",null,"You can validate your implementation by uncommenting the supplied tests for ",Object(r.b)("inlineCode",{parentName:"p"},"insert")," in ",Object(r.b)("inlineCode",{parentName:"p"},"list_test.c")," and then typing ",Object(r.b)("inlineCode",{parentName:"p"},"make")," and then running the executable ",Object(r.b)("inlineCode",{parentName:"p"},"./test"),". "))}p.isMDXComponent=!0},183:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),p=function(e){var t=i.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(n),m=a,u=s["".concat(o,".").concat(m)]||s[m]||d[m]||r;return n?i.a.createElement(u,c(c({ref:t},b),{},{components:n})):i.a.createElement(u,c({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var b=2;b<r;b++)o[b]=n[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);