(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{183:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return h}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var b=i.a.createContext({}),s=function(e){var t=i.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=s(a),d=n,h=p["".concat(o,".").concat(d)]||p[d]||m[d]||r;return a?i.a.createElement(h,c(c({ref:t},b),{},{components:a})):i.a.createElement(h,c({ref:t},b))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var b=2;b<r;b++)o[b]=a[b];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},60:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return s}));var n=a(2),i=a(6),r=(a(0),a(183)),o={id:"hw3",title:"Homework 3"},c={unversionedId:"hw/hw3",id:"hw/hw3",isDocsHomePage:!1,title:"Homework 3",description:"* You are expected to work individually.",source:"@site/docs\\hw\\hw3.md",slug:"/hw/hw3",permalink:"/cs220_f20/docs/hw/hw3",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/hw/hw3.md",version:"current"},l=[{value:"Overview",id:"overview",children:[]},{value:"Specific Requirements and Assumptions",id:"specific-requirements-and-assumptions",children:[]},{value:"Sample Runs",id:"sample-runs",children:[]},{value:"Testing",id:"testing",children:[]},{value:"Files",id:"files",children:[]},{value:"Compiling",id:"compiling",children:[]},{value:"Submission",id:"submission",children:[]}],b={rightToc:l};function s(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"You are expected to work individually."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"Due: ",Object(r.b)("strike",null,"Friday October 2nd")," Friday October 9th at 11pm EDT (Baltimore time).")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("em",{parentName:"li"},"This assignment is worth 60 points."))))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"Learning Objectives")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"To practice with:"),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"arrays & strings,"),Object(r.b)("li",{parentName:"ul"},"file I/O, command-line arguments,"),Object(r.b)("li",{parentName:"ul"},"program organization"),Object(r.b)("li",{parentName:"ul"},"Makefiles,"),Object(r.b)("li",{parentName:"ul"},"testing with ",Object(r.b)("inlineCode",{parentName:"li"},"assert"),".")))),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Make sure to do a ",Object(r.b)("inlineCode",{parentName:"p"},"git pull")," on the public repo before starting to work to get the starter files for this homework. You must work with the starter\nfiles to complete this homework."))),Object(r.b)("h2",{id:"overview"},"Overview"),Object(r.b)("p",null,"A regular expression (or simply regex) is a sequence of characters that defines a search pattern (wikipedia). We then use such patterns to do \u201cfind\u201d or \u201cfind-then-replace\u201d operations on a given text. Regular expressions are very popular and widely used. You, yourself, use it regularly when working on a mac/linux terminal. For instance, if you intend to list all files with extension ",Object(r.b)("inlineCode",{parentName:"p"},".c"),", you simply do ",Object(r.b)("inlineCode",{parentName:"p"},"ls *.c"),". The ",Object(r.b)("inlineCode",{parentName:"p"},"*")," in ",Object(r.b)("inlineCode",{parentName:"p"},"*.c")," represents a catch all, and can represent any set of characters (i.e. zero or more characters), followed by a ",Object(r.b)("inlineCode",{parentName:"p"},".c"),"."),Object(r.b)("p",null,"In this homework, you will implement a simple yet effective regular expression matcher. A number of words are stored in an input file that should be initially read and stored into a 2D array of characters. Each row in this array stores one word. Next, the program repeatedly asks the user to enter a regex and reports which of the words in the 2d array (if any) match the given regex. The user of the program can exit the program by pressing ",Object(r.b)("inlineCode",{parentName:"p"},"ctrl-d")," at any time. We are going to modify the standard regex protocol for this assignment to make it simpler to implement."),Object(r.b)("h2",{id:"specific-requirements-and-assumptions"},"Specific Requirements and Assumptions"),Object(r.b)("p",null,"There are three regex wildcard characters for this assignment: ",Object(r.b)("inlineCode",{parentName:"p"},"*"),", ",Object(r.b)("inlineCode",{parentName:"p"},"?"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"~"),"."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"*")," (Kleene star) - will match the character preceding the star ",Object(r.b)("strong",{parentName:"li"},"0+ times")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"?")," (Question Mark) - will match character preceding the question mark ",Object(r.b)("strong",{parentName:"li"},"0 or 1 time"),", but no more"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"~")," (Tilde) - will match any group of length between ","[0, ",Object(r.b)("inlineCode",{parentName:"li"},"restriction"),"]",", where restriction length can optionally be changed in the command line. This overrides the standard ",Object(r.b)("inlineCode",{parentName:"li"},"~")," operator found in regex.")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The input file will be passed in as the first argument to the program. ")),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you run the program without specifying an input file, you must print an error and return value ",Object(r.b)("inlineCode",{parentName:"p"},"1")," from main."))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The first line of the input file will contain a number ",Object(r.b)("inlineCode",{parentName:"li"},"n")," indicating the number of words in the file. ")),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If the first line is not a valid number, you must print an error message and return a non-zero value from the main function."))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You can assume the words will be at most 32 characters in length and will only contain valid alphabets (A - Z, a - z), numbers (0 - 9) or special characters (@, #, $, %, !, &).")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Words in the file can be different sizes, and is not required to use all 32 characters."))),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"The words are not null terminated! You do not need to insert null character either in your array."))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"There will be no regex wildcards (",Object(r.b)("inlineCode",{parentName:"p"},"*"),", ",Object(r.b)("inlineCode",{parentName:"p"},"?"),", or ",Object(r.b)("inlineCode",{parentName:"p"},"~"),") in the words found in the input file.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If there are fewer words in the word file than specified by the number in the first line of the file, then you must print an error message and return a non-zero value from main.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You must only read the first ",Object(r.b)("inlineCode",{parentName:"p"},"n")," words, you can ignore all words after ",Object(r.b)("inlineCode",{parentName:"p"},"n")," and should continue with the program as normal.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Once the files are read, the user can input into ",Object(r.b)("inlineCode",{parentName:"p"},"stdin")," input stream the regex patterns to match with the list of words from the filename.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The patterns can be separated using a white space (any amount) and the program should continue to look for patterns until it reaches end of input (",Object(r.b)("inlineCode",{parentName:"p"},"ctrl-D")," if pressed).")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You can assume each input regex pattern will be under 128 characters.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The words that match the regex pattern should be printed to ",Object(r.b)("inlineCode",{parentName:"p"},"stdout")," ",Object(r.b)("strong",{parentName:"p"},"in the order they were read in from the file")," with one word per line.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You can assume that the regex pattern a user inputs is well formed, and that there will always be a valid character before the ",Object(r.b)("inlineCode",{parentName:"p"},"?")," and ",Object(r.b)("inlineCode",{parentName:"p"},"*")," wildcard characters.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The regex pattern has to ",Object(r.b)("strong",{parentName:"p"},"match the whole word"),", and not just a substring of the word.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"There may be multiple ways a regex pattern can match a search word. For example, for the search word ",Object(r.b)("inlineCode",{parentName:"p"},"aa")," and the regex pattern ",Object(r.b)("inlineCode",{parentName:"p"},"a?a?a"),", either the first ",Object(r.b)("inlineCode",{parentName:"p"},"a?")," or the second token can be counted as 0 instance (with the other counted as 1 instance) to match the search word - you must explore all possibilities. (",Object(r.b)("strong",{parentName:"p"},"Hint: think recursion!"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"If a particular regex pattern has no match, then you should output ",Object(r.b)("inlineCode",{parentName:"p"},"No match found for regex X")," where ",Object(r.b)("inlineCode",{parentName:"p"},"X")," is the regex pattern.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"The default ",Object(r.b)("inlineCode",{parentName:"p"},"restriction")," length for the ",Object(r.b)("inlineCode",{parentName:"p"},"~")," (tilde) operator is ",Object(r.b)("inlineCode",{parentName:"p"},"10"),", however the user can optionally specify a ",Object(r.b)("inlineCode",{parentName:"p"},"restriction")," length (>= 1) in the command line argument after the filename argument. "))),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If the user specifies an invalid ",Object(r.b)("inlineCode",{parentName:"p"},"restriction")," length, then the program should print an error message and return value ",Object(r.b)("inlineCode",{parentName:"p"},"2")," from main."))),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"All variables must be declared inside functions. No variables should be global or ",Object(r.b)("inlineCode",{parentName:"p"},"extern"),".")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},'You must factor your code into functions, each function performing a distinct task. We give one required function prototype below under "Testing" but this should ',Object(r.b)("strong",{parentName:"p"},"NOT")," be the only non-main function in your program.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"You may ",Object(r.b)("strong",{parentName:"p"},"NOT")," use the C library ",Object(r.b)("inlineCode",{parentName:"p"},"regex.h")," or any built-in regular expression matching types in your program.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Put all function declarations into a header file (",Object(r.b)("inlineCode",{parentName:"p"},"functions.h"),"). ",Object(r.b)("inlineCode",{parentName:"p"},"functions.c")," will contain implementations for those functions, and ",Object(r.b)("inlineCode",{parentName:"p"},"test_functions.c")," will contain a main function that tests each of the functions in ",Object(r.b)("inlineCode",{parentName:"p"},"functions.c"),". ",Object(r.b)("inlineCode",{parentName:"p"},"hw3.c")," will use those functions to implement the interface described above. All three ",Object(r.b)("inlineCode",{parentName:"p"},".c")," files should ",Object(r.b)("inlineCode",{parentName:"p"},'#include "functions.h"'),".")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Include your name and JHED as comments in the top two lines of ",Object(r.b)("strong",{parentName:"p"},"each")," ",Object(r.b)("inlineCode",{parentName:"p"},".c")," and ",Object(r.b)("inlineCode",{parentName:"p"},".h")," file you create.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Your Makefile should compile the ",Object(r.b)("inlineCode",{parentName:"p"},"hw3")," executable with the command ",Object(r.b)("inlineCode",{parentName:"p"},"make hw3"),", and create AND run the ",Object(r.b)("inlineCode",{parentName:"p"},"test")," executable with the command ",Object(r.b)("inlineCode",{parentName:"p"},"make test"),"."))),Object(r.b)("h2",{id:"sample-runs"},"Sample Runs"),Object(r.b)("p",null,"USAGE: ",Object(r.b)("inlineCode",{parentName:"p"},"./hw3 <filename> <OPTIONAL: restriction_length>")),Object(r.b)("p",null,"Let input text file ",Object(r.b)("inlineCode",{parentName:"p"},"input.txt")," contain:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"5\nintermediate\ninttterrmeediateeee\nprogram\nppproograaamm\naaa\n")),Object(r.b)("p",null,"Run the command using ",Object(r.b)("inlineCode",{parentName:"p"},"./hw3 input.txt")),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Ignore the dollar sign ($) at the front of the user input, it is used here just to distinguish a user input from program output."))),Object(r.b)("p",null,"#1"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ intermediate      # user input\nintermediate        # program output\n")),Object(r.b)("p",null,"#2"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ int*e*r*me*diate* # user input\nintermediate        # program output\ninttterrmeediateeee # program output\n")),Object(r.b)("p",null,"#3"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ ina?ttt?t*e*r*ms?e*diate*\ninttterrmeediateeee\n")),Object(r.b)("p",null,"#4"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ ~                     # only show words less equal to 10 letters\nprogram\naaa\n")),Object(r.b)("p",null,"#5"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ ~~                    # words at most 2*10 = 20 characters (all words)\nintermediate\ninttterrmeediateeee\nprogram\nppproograaamm\naaa\n")),Object(r.b)("p",null,"#6"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ ~a                    # the ~ can represent two characters, followed by an a.\naaa                     # All regex characters need to be matched.\n")),Object(r.b)("p",null,"#7"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ a?a?a?a?a?a?a?aaa   # all the 'a?' are ignored, and only the trailing 'aaa' are considered\naaa\n")),Object(r.b)("p",null,"#8"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ a*\naaa\n")),Object(r.b)("p",null,"#9"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"$ a*b\nNo match found for regex 'a*b'\n")),Object(r.b)("h2",{id:"testing"},"Testing"),Object(r.b)("p",null,"In addition to your ",Object(r.b)("inlineCode",{parentName:"p"},"hw3.c")," program, you must complete ",Object(r.b)("inlineCode",{parentName:"p"},"test_functions.c")," to test your functions via ",Object(r.b)("inlineCode",{parentName:"p"},"assert(...)")," statements. This program will have its own main function and takes no input. It simply runs a series of tests that you have written. Your tests should use assert statements to make sure your functions behave properly. If all tests pass, the program should output a message indicating success."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"It is extremely, extremely good programming practice to write test cases to"),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},"test your basic assumptions"),Object(r.b)("li",{parentName:"ol"},'try "corner" and extreme cases'),Object(r.b)("li",{parentName:"ol"},"test loop invariants, etc")),Object(r.b)("p",{parentName:"div"},"It can save you a great deal of frustration and effort down the road. We will look carefully at your tests when grading."))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Testing hint:")," If you want to test whether two files are identical (e.g. when one file contains your program's actual output and the other contains the expected output), the function below will help. Consider pasting it into your ",Object(r.b)("inlineCode",{parentName:"p"},"test_functions.c")," file when you start writing your tests."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"/*\n * Reads lhs and rhs character by character until either reaches eof.\n * Returns true if the files can be read and the two files match\n * character by character. Returns false if two files either can't be\n * opened or don't match.\n */\nint fileeq(char lhsName[], char rhsName[]) {\n    FILE* lhs = fopen(lhsName, \"r\");\n    FILE* rhs = fopen(rhsName, \"r\");\n\n    // don't compare if we can't open the files\n    if (lhs == NULL || rhs == NULL) return 0;\n\n    int match = 1;\n    // read until both of the files are done or there is a mismatch\n    while (!feof(lhs) || !feof(rhs)) {\n        if (feof(lhs) ||                  // lhs done first\n            feof(rhs) ||                  // rhs done first\n            (fgetc(lhs) != fgetc(rhs))) { // chars don't match\n            match = 0;\n            break;\n        }\n    }\n    fclose(lhs);\n    fclose(rhs);\n    return match;\n}\n")),Object(r.b)("p",null,"The test executable should be made AND the test file should run when running the one command ",Object(r.b)("inlineCode",{parentName:"p"},"make test"),". Running the test file should also have a message at the end indicating all tests have passed (already done for you). Please do add more of your own tests in the test files."),Object(r.b)("p",null,"When creating your example ",Object(r.b)("inlineCode",{parentName:"p"},".txt"),' files to test your "file reading" functions, you must ',Object(r.b)("strong",{parentName:"p"},"create the text files from within the test program"),". For example, let's say you would like to create a test file; you must go about doing it like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),'FILE* fptr = fopen("test_file_1.txt", "w");\nfprintf(fptr, "5\\nintermediate\\ninttterrmeediateeee\\nprogram\\nppproograaamm\\naaa");\nfclose(fptr);\n// now I can open this file, and use it for my tests to fill the grid.\n')),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"When you submit your ",Object(r.b)("inlineCode",{parentName:"p"},".zip")," file to Gradescope, you must not need to submit your ",Object(r.b)("inlineCode",{parentName:"p"},".txt")," test files, because the test program should create them ",Object(r.b)("strong",{parentName:"p"},"from within")," the program."))),Object(r.b)("h2",{id:"files"},"Files"),Object(r.b)("h4",{id:"makefile"},"Makefile"),Object(r.b)("p",null,"Start with the template Makefile in the public repo: ",Object(r.b)("inlineCode",{parentName:"p"},"cs220fa20-public/homework/hw3/Makefile"),". This contains some, but not all, of the needed target definitions. The definitions provided are enough for you to build the ",Object(r.b)("inlineCode",{parentName:"p"},"hw3")," executable using ",Object(r.b)("inlineCode",{parentName:"p"},"make hw3")," on the command line. The Makefile does not have a target for the ",Object(r.b)("inlineCode",{parentName:"p"},"test")," executable -- you must add this yourself. Include the final Makefile (with working targets for both ",Object(r.b)("inlineCode",{parentName:"p"},"test_functions.c")," and ",Object(r.b)("inlineCode",{parentName:"p"},"hw3.c"),") in your submitted files. Remember: ",Object(r.b)("inlineCode",{parentName:"p"},"make test")," should create the test executable ",Object(r.b)("strong",{parentName:"p"},"and")," run the test file in one command."),Object(r.b)("h4",{id:"gitlog"},"Gitlog"),Object(r.b)("p",null,Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"https://imgs.xkcd.com/comics/git_commit.png",alt:"Git commit trend throughout the project"}))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"You must commit your changes with meaningful messages every so often. But what are meaningful commit messages? They are simply messages that can inform the reader what the commit exactly did to improve the program. If you want further information, you can read ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://chris.beams.io/posts/git-commit/"}),"this")," 10 minute article that talks about good commit message practice."))),Object(r.b)("p",null,"You must include with your submission a copy of the output of git log showing at least five commits to the repository. Save the ",Object(r.b)("inlineCode",{parentName:"p"},"git log")," output into a file called ",Object(r.b)("inlineCode",{parentName:"p"},"gitlog.txt")," (e.g. by doing ",Object(r.b)("inlineCode",{parentName:"p"},"git log > gitlog.txt)"),"."),Object(r.b)("h4",{id:"readme"},"README"),Object(r.b)("p",null,"Please submit a file called ",Object(r.b)("inlineCode",{parentName:"p"},"README")," (not ",Object(r.b)("inlineCode",{parentName:"p"},"README.txt")," or ",Object(r.b)("inlineCode",{parentName:"p"},"README.md"),", etc -- just ",Object(r.b)("inlineCode",{parentName:"p"},"README"),") including information about what design choices you made and anything the graders should know about your submission. In ",Object(r.b)("inlineCode",{parentName:"p"},"README")," you should:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Write your name and JHED ID at the top of the file."),Object(r.b)("li",{parentName:"ul"},"Briefly justify the structure of your program; why you defined the functions you did, etc."),Object(r.b)("li",{parentName:"ul"},"If applicable: Highlight anything you did that was particularly clever."),Object(r.b)("li",{parentName:"ul"},"If applicable: Tell the graders if you couldn\u2019t do everything. Where did you stop? What did you get stuck on? What are the parts you already know do not work according to the requirements?")),Object(r.b)("h2",{id:"compiling"},"Compiling"),Object(r.b)("p",null,"Your code should compile with no errors or warnings with the typical command: ",Object(r.b)("inlineCode",{parentName:"p"},"gcc <source> -Wall -Wextra -std=c99 -pedantic"),". Do not use any special libraries, like ",Object(r.b)("inlineCode",{parentName:"p"},"math.h"),", that require different additional/different compiler options. Libraries such as ",Object(r.b)("inlineCode",{parentName:"p"},"string.h")," and ",Object(r.b)("inlineCode",{parentName:"p"},"ctype.h")," are okay to use in general. Your program should compile without errors or warnings with the Makefile."),Object(r.b)("h2",{id:"submission"},"Submission"),Object(r.b)("p",null,"Create a ",Object(r.b)("inlineCode",{parentName:"p"},".zip")," file named ",Object(r.b)("inlineCode",{parentName:"p"},"hw3.zip")," containing:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"hw3.c")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"functions.h")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"functions.c")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"test_functions.c")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"README")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Makefile")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"gitlog.txt"))),Object(r.b)("p",null,"Copy ",Object(r.b)("inlineCode",{parentName:"p"},"hw3.zip")," file to your local machine (using ",Object(r.b)("inlineCode",{parentName:"p"},"scp")," or ",Object(r.b)("inlineCode",{parentName:"p"},"pscp"),"), and submit it as Homework 3 on Gradescope. When you submit, gradescope conducts a series of automatic tests. These do basic checks, e.g. to check that you submitted the right files. If you see error messages (in red), address them and resubmit. You may re-submit any number of times prior to the deadline; only your latest submission will be graded. Review the course syllabus for late submission policies (grace period and late days)."),Object(r.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"danger")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Remember that if your final submitted code does not compile, you will earn a zero score for the assignment."))),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Two notes regarding automatic checks for programming assignments:"),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"Passing an automatic check is not itself worth points. (There might be a nominal, low point value like 0.01 associated with a check, but that won\u2019t count in the end.) The checks exist to help you and the graders find obvious errors."),Object(r.b)("li",{parentName:"ul"},"The automatic checks cover some of the requirements set out in the assignment, but not all. It is up to you to test your own work and ensure your programs satisfy all stated requirements. Passing all the automatic checks does not mean you have earned all the points.")))))}s.isMDXComponent=!0}}]);